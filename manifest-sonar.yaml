---
# Source: sonarqube/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
type: Opaque
data:
  jdbc-password: ""
---
# Source: sonarqube/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-sonarqube-monitoring-passcode
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
type: Opaque
data:
  SONAR_WEB_SYSTEMPASSCODE: "ZGVmaW5lX2l0"
---
# Source: sonarqube/templates/secret.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-sonarqube-http-proxies
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
type: Opaque
stringData:
  PLUGINS-HTTP-PROXY: ""
  PLUGINS-HTTPS-PROXY: ""
  PLUGINS-NO-PROXY: ""
  PROMETHEUS-EXPORTER-HTTP-PROXY: ""
  PROMETHEUS-EXPORTER-HTTPS-PROXY: ""
  PROMETHEUS-EXPORTER-NO-PROXY: ""
---
# Source: sonarqube/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-config
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
data:
  sonar.properties: |
    sonar.jdbc.url=jdbc:postgresql://<your-db-name>.postgres.database.azure.com:5432/sonarqube?ssl=true&sslmode=require
    sonar.jdbc.username=<aad-app-username>@<your-db-name>
    sonar.web.context=/
    sonar.web.javaAdditionalOpts=-Djavax.net.ssl.trustStore=/path/to/truststore.jks
    sonar.es.bootstrap.checks.disable=true
---
# Source: sonarqube/templates/init-fs.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-init-fs
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
data:
  init_fs.sh: |-
    chown -R 1000:0 /opt/sonarqube/data
    chown -R 1000:0 /opt/sonarqube/temp
    chown -R 1000:0 /opt/sonarqube/logs
---
# Source: sonarqube/templates/init-sysctl.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-init-sysctl
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
data:
  init_sysctl.sh: |-
    set -o errexit
    set -o xtrace
    vmMaxMapCount=524288
    if [[ "$(sysctl -n vm.max_map_count)" -lt $vmMaxMapCount ]]; then
      sysctl -w vm.max_map_count=$vmMaxMapCount
      if [[ "$(sysctl -n vm.max_map_count)" -lt $vmMaxMapCount ]]; then
        echo "Failed to set initSysctl.vmMaxMapCount"; exit 1
      fi
    fi
    fsFileMax=131072
    if [[ "$(sysctl -n fs.file-max)" -lt $fsFileMax ]]; then
      sysctl -w fs.file-max=$fsFileMax
      if [[ "$(sysctl -n fs.file-max)" -lt $fsFileMax ]]; then
        echo "Failed to set initSysctl.fsFileMax"; exit 1
      fi
    fi
    nofile=131072
    if [[ "$(ulimit -n)" != "unlimited" ]]; then
      if [[ "$(ulimit -n)" -lt $nofile ]]; then
        ulimit -n $nofile
        if [[ "$(ulimit -n)" -lt $nofile ]]; then
          echo "Failed to set initSysctl.nofile"; exit 1
        fi
      fi
    fi
    nproc=8192
    if [[ "$(ulimit -u)" != "unlimited" ]]; then
      if [[ "$(ulimit -u)" -lt $nproc ]]; then
        ulimit -u $nproc
        if [[ "$(ulimit -u)" -lt $nproc ]]; then
          echo "Failed to set initSysctl.nproc"; exit 1
        fi
      fi
    fi
---
# Source: sonarqube/templates/install-plugins.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-install-plugins
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
data:
  install_plugins.sh: |-
---
# Source: sonarqube/templates/jdbc-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-jdbc-config
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
data:
  SONAR_JDBC_USERNAME: "<aad-app-username>@<your-db-name>"
  SONAR_JDBC_URL: "jdbc:postgresql://<your-db-name>.postgres.database.azure.com:5432/sonarqube?ssl=true&sslmode=require"
---
# Source: sonarqube/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
  storageClassName: "managed-csi"
---
# Source: sonarqube/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 9000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: sonarqube
    release: sonarqube
---
# Source: sonarqube/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/instance: sonarqube
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: sonarqube
    app.kubernetes.io/component: sonarqube-sonarqube
    app.kubernetes.io/version: "10.4.1-community"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sonarqube
      release: sonarqube
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: d0bcbc0a41da9b9b56ecd6b2506869dcc1996380441cbe53d59a81b35dc196e1
        checksum/init-fs: 340613a029eb1e37fb60757e201a499f82c72c5b9276489b0a415dd164530647
        checksum/init-sysctl: 4ba25ec27a3a43911c01eec4faa8bf5ff0ca3dd1b579d941961dd5daccd05f25
        checksum/plugins: 814aa493e22e40353cd5fd13eaa9019053bb7608d34b29791af63f8ef3a4687e
        checksum/secret: b90b914c82d817dc3f5764b8ae637358d274c15675615527687d71278a1a0b1a
      labels:
        app: sonarqube
        release: sonarqube
    spec:
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 0
      initContainers:
        - name: init-sysctl
          image: sonarqube:10.4.1-community
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            runAsUser: 0
          command: ["/bin/bash", "-e", "/tmp/scripts/init_sysctl.sh"]
          volumeMounts:
            - name: init-sysctl
              mountPath: /tmp/scripts/
          env:
            - name: SONAR_WEB_CONTEXT
              value: /
            - name: SONAR_WEB_JAVAOPTS
              value: ""
            - name: SONAR_CE_JAVAOPTS
              value: ""
        - name: concat-properties
          image: sonarqube:10.4.1-community
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              #!/bin/sh
              if [ -f /tmp/props/sonar.properties ]; then
                cat /tmp/props/sonar.properties > /tmp/result/sonar.properties
              fi
              if [ -f /tmp/props/secret.properties ]; then
                cat /tmp/props/secret.properties > /tmp/result/sonar.properties
              fi
              if [ -f /tmp/props/sonar.properties -a -f /tmp/props/secret.properties ]; then
                awk 1 /tmp/props/sonar.properties /tmp/props/secret.properties > /tmp/result/sonar.properties
              fi
          volumeMounts:
            - mountPath: /tmp/result
              name: concat-dir
            - mountPath: /tmp/props/sonar.properties
              name: config
              subPath: sonar.properties
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: SONAR_WEB_CONTEXT
              value: /
            - name: SONAR_WEB_JAVAOPTS
              value: ""
            - name: SONAR_CE_JAVAOPTS
              value: ""
        - name: init-fs
          image: sonarqube:10.4.1-community
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
              - CHOWN
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          command: ["sh", "-e", "/tmp/scripts/init_fs.sh"]
          volumeMounts:
            - name: init-fs
              mountPath: /tmp/scripts/
            - mountPath: /opt/sonarqube/data
              name: sonarqube
              subPath: data
            - mountPath: /opt/sonarqube/temp
              name: sonarqube
              subPath: temp
            - mountPath: /opt/sonarqube/logs
              name: sonarqube
              subPath: logs
            - mountPath: /tmp
              name: tmp-dir
            - mountPath: /opt/sonarqube/extensions
              name: sonarqube
              subPath: extensions
      containers:
        - name: sonarqube
          image: sonarqube:10.4.1-community
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          resources:
            limits:
              cpu: 800m
              ephemeral-storage: 512000M
              memory: 6144M
            requests:
              cpu: 400m
              ephemeral-storage: 1536M
              memory: 2048M
          env:
            - name: SONAR_HELM_CHART_VERSION
              value: 2025.2.0
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarqube-sonarqube
                  key: jdbc-password
            - name: SONAR_WEB_SYSTEMPASSCODE
              valueFrom:
                secretKeyRef:
                  name: sonarqube-sonarqube-monitoring-passcode
                  key: SONAR_WEB_SYSTEMPASSCODE
            - name: SONAR_WEB_CONTEXT
              value: /
            - name: SONAR_WEB_JAVAOPTS
              value: ""
            - name: SONAR_CE_JAVAOPTS
              value: ""
          envFrom:
            - configMapRef:
                name: sonarqube-sonarqube-jdbc-config
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                wget --no-proxy --quiet -O /dev/null --timeout=1 --header="X-Sonar-Passcode: $SONAR_WEB_SYSTEMPASSCODE" "http://localhost:9000/api/system/liveness"
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                #!/bin/bash
                # A Sonarqube container is considered ready if the status is UP, DB_MIGRATION_NEEDED or DB_MIGRATION_RUNNING
                # status about migration are added to prevent the node to be kill while SonarQube is upgrading the database.
                if wget --no-proxy -qO- http://localhost:9000/api/system/status | grep -q -e '"status":"UP"' -e '"status":"DB_MIGRATION_NEEDED"' -e '"status":"DB_MIGRATION_RUNNING"'; then
                  exit 0
                fi
                exit 1
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 1
          startupProbe:
            httpGet:
              scheme: HTTP
              path: /api/system/status
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 24
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube
              subPath: data
            - mountPath: /opt/sonarqube/temp
              name: sonarqube
              subPath: temp
            - mountPath: /opt/sonarqube/logs
              name: sonarqube
              subPath: logs
            - mountPath: /tmp
              name: tmp-dir
            - mountPath: /opt/sonarqube/conf/
              name: concat-dir
            - mountPath: /opt/sonarqube/extensions
              name: sonarqube
              subPath: extensions
      serviceAccountName: sonarqube-sa
      volumes:
        - name: config
          configMap:
            name: sonarqube-sonarqube-config
            items:
            - key: sonar.properties
              path: sonar.properties
        
        - name: init-sysctl
          configMap:
            name: sonarqube-sonarqube-init-sysctl
            items:
              - key: init_sysctl.sh
                path: init_sysctl.sh
        - name: init-fs
          configMap:
            name: sonarqube-sonarqube-init-fs
            items:
              - key: init_fs.sh
                path: init_fs.sh
        - name: sonarqube
          persistentVolumeClaim:
            claimName: sonarqube-sonarqube
        - name : tmp-dir
          emptyDir:
            {}
        - name : concat-dir
          emptyDir:
            {}
---
# Source: sonarqube/templates/tests/sonarqube-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "sonarqube-ui-test"
  annotations:
    "helm.sh/hook": test-success
  labels:
    app: sonarqube
    chart: sonarqube-2025.2.0
    release: sonarqube
    heritage: Helm
spec:
  automountServiceAccountToken: false
  containers:
    - name: sonarqube-ui-test
      image: "sonarqube:10.4.1-community"
      imagePullPolicy: IfNotPresent
      command: ['wget']
      args: [
        '--retry-connrefused',
        '--waitretry=1',
        '--timeout=5',
        '-t',
        '12',
        '-qO-',
        'sonarqube-sonarqube:9000/api/system/status'
        ]
      resources:
        limits:
          cpu: 500m
          ephemeral-storage: 1000M
          memory: 200M
        requests:
          cpu: 500m
          ephemeral-storage: 100M
          memory: 200M
  restartPolicy: Never
